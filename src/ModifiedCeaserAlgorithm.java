/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author user
 */

import javax.swing.*;
public class ModifiedCeaserAlgorithm extends javax.swing.JDialog {

    /**
     * Creates new form ModifiedCeaserAlgorithm
     */
    public ModifiedCeaserAlgorithm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        EncryptButton = new javax.swing.JButton();
        DeccryptButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        crypkey = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jLabel1.setText(" Plaintext to be encrypted");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setName("plaintext"); // NOI18N
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setBackground(new java.awt.Color(255, 0, 51));
        jTextArea2.setColumns(20);
        jTextArea2.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea2.setRows(5);
        jTextArea2.setName("cyphertext"); // NOI18N
        jScrollPane2.setViewportView(jTextArea2);
        jTextArea2.getAccessibleContext().setAccessibleName("");

        jLabel2.setText("Ceaser Cypher encrypted text");

        EncryptButton.setBackground(new java.awt.Color(0, 0, 0));
        EncryptButton.setForeground(new java.awt.Color(255, 51, 51));
        EncryptButton.setText("---- Encrypt --->");
        EncryptButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        EncryptButton.setName("encryptbutton"); // NOI18N
        EncryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EncryptButtonActionPerformed(evt);
            }
        });

        DeccryptButton.setBackground(new java.awt.Color(0, 0, 0));
        DeccryptButton.setForeground(new java.awt.Color(255, 51, 51));
        DeccryptButton.setText("<--- Decrypt ----");
        DeccryptButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DeccryptButton.setName("decryptbutton"); // NOI18N
        DeccryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeccryptButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("ENTER KEY (NUMERIC)");

        crypkey.setName("CryptKey"); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe Script", 1, 10)); // NOI18N
        jLabel4.setForeground(java.awt.Color.red);
        jLabel4.setText("MODIFIED CEASER ALGORITHM FOR ENCRYPTION AND DECRYPTION OF TEXT DATA");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(jLabel1))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(crypkey, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(EncryptButton, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(DeccryptButton, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(198, 198, 198)
                                .addComponent(jLabel2))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(crypkey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(EncryptButton)
                                .addGap(41, 41, 41)
                                .addComponent(DeccryptButton)
                                .addGap(62, 62, 62)))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


public static String len;
public static String resx = "";
public static final String ALPHABET = "abcdefghijklmnopqrstuvwxyz";

public static String encrypt(String plainText, int shiftKey){
        plainText = plainText.toLowerCase();

String cipherText = "";
String cipherText2 = "";

for (int i = 0; i < plainText.length(); i++)

{

int charPosition = ALPHABET.indexOf(plainText.charAt(i));

int keyVal = (shiftKey + charPosition) % 26;

char replaceVal = ALPHABET.charAt(keyVal);
//
int shiftKey2 = 2;
int keyVal2 = (shiftKey2 + charPosition) % 26;
char replaceVal2 = ALPHABET.charAt(keyVal2);

cipherText += replaceVal; 
cipherText2 +=replaceVal2;

}

return cipherText+cipherText2;
    }
    

    public static String decrypt(String cipherText, int shiftKey){
        cipherText = cipherText.toLowerCase();

String plainText = "";

for (int i = 0; i < cipherText.length()/2; i++)

{

int charPosition = ALPHABET.indexOf(cipherText.charAt(i));

int keyVal = (charPosition - shiftKey) % 26;

if (keyVal < 0)

{

keyVal = ALPHABET.length() + keyVal;

}

char replaceVal = ALPHABET.charAt(keyVal);

plainText += replaceVal;

    }
    return plainText;

}
    
    
    private void EncryptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EncryptButtonActionPerformed
        String plaintext = this.jTextArea1.getText();
        int key = Integer.parseInt(new String(this.crypkey.getPassword()));
        String encryptedMsg = encrypt(plaintext, key);
        this.jTextArea2.setText(encryptedMsg);
                
        this.jTextArea1.setText("");
        this.crypkey.setText("");
                      
    }//GEN-LAST:event_EncryptButtonActionPerformed

    private void DeccryptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeccryptButtonActionPerformed
        String cyphertext = this.jTextArea2.getText();
        int key = Integer.parseInt(new String(this.crypkey.getPassword()));
        String decryptedMsg = decrypt(cyphertext, key);
        this.jTextArea1.setText(decryptedMsg);
        this.crypkey.setText("");
        this.jTextArea2.setText("");
    }//GEN-LAST:event_DeccryptButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModifiedCeaserAlgorithm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModifiedCeaserAlgorithm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModifiedCeaserAlgorithm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModifiedCeaserAlgorithm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ModifiedCeaserAlgorithm dialog = new ModifiedCeaserAlgorithm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeccryptButton;
    private javax.swing.JButton EncryptButton;
    private javax.swing.JPasswordField crypkey;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}
